# With crafting recipes, be able to put CustomItems in, currently just supports strings.
This works for outputs, but I'm not sure about inputs... NOT POSSIBLE... Custom crafter???
# Floor crafting? https://new.reddit.com/r/MinecraftCommands/comments/1clflkh/wiki_update_do_custom_crafting_with_nbt/

# Custom blocks destruction

# Cooldown for right clickable items

# Merge on_load

# TODO: Should the custom font class also move the images over? Probably...

# Hmmm, what about a mapping of item to image? Could generate it automatically? Maybe from the model file?

# Implement reference book description

# Current plan for breaking is to check every tick if any of the display entities are in air, and if so, delete the items and re-spawn them

Let's do raycasting.
Custom blocks!!! ---------------

LOOT STUFF IS GOING TO BE HARDDDD

interaction entity for detecting right click on blocks! If we ever add custom invs

Add loaded_projectiles validation, i.e. arrows and fireworks and stuff

# Change datapack init to take custom_content: list[a, b, c]

For an "install" stuff, just give them an achievement and don't revoke!

# Make some part of the logo clickable would be fun. Maybe a link to the project?

Look into resizing the main logo instead of giving it a height that's right

# Signs with data, maybe even Command()?

# Advancements (maybe even give one for loading the datapack for the first time?)
# Use remainder components

# Loot tables

# INFO: Paintings require a world reset

# Improve testing setup, it's a nice start though.

# JUKEBOX SONGS - Length is messed up... Hmmmm

# Debug book with all the sounds? Could be fun, and helpful, sounds, fonts, paintings, etc.
"Play sound" button in the book, with a list of all the sounds, and a play button next to them.

# When creating instruments, optionally take a custom sound and do it for you. (Need datapack ]:)

# Somehow detect if you're trying to enchant an item with something that doesn't make sense, e.g. a sword with silk touch, etc.

# For recipes, I suggest we suffix _<method> to it, so you can make stuff multiple ways, like beef can be smoked, furnaced and campfired

# ▙ is fun for stairs, ▄▄ for slab
# ► ▶  ➙ ➛ 	➜ ➝ ➞ ➟ ➠ ➡ ➢ ➣ ➤ ➥ ➦ ➨ ➩ ➪ ➫ ➬ ➭ ➮ ➯ ➱ ➲ ➳ ➴ ➵ ➶ ➷ ➸ ➹ ➺ ➻ ➼ ➽ ➾ 

# For the ref book, have a 2nd row of invisible icons so the buttons and hover work well

python -m pip install -e .

# Maybe load in all the regular tags and stuff, sort of like how he pre-makes all the item attributes
# Maybe we should pre-populate all the default items, like swords and stuff, so you can base stuff of them?

# Make the default texture path point to some default texture we provide? For the datapack?

# For things that are edible, add some lore? Same with equipable? "Can be used as a Glider", etc?

# Make a tag by default for all items created by the datapack?

# Lodestone tracker component data is broken, spins randomly (Because we're not in the nether?)

# § -> &a - Kinda

# Easy to use commands to give the items outright: /loot give @s loot umultitool:<material>_<tool> (example: /loot give @s loot umultitool:netherite_paxeloe)

Added minecraft:extended_view boolean property
Returns true if player has requested extended details by holding shift key down (maybe only if they're not in the inventory?)
Note: not a keybind, can't be rebound
Only works when item is displayed in UI  - Better text on shift!

# https://www.reddit.com/r/mcresourcepack/comments/wpcg0a/hi_i_want_to_learn_what_does_the_ascent_and_chars/

Automatic animal breeding

A tag for all non-right-clickable items, like bow, where we can't add right-click functionality

# Like the survival tweaks, would be nice if we could tweak the original items.
The python code for that datapack would be so clean... We'd need to recreate every vanilla item/tool first, maybe do it anyway?